// Autogenerated using stratification.
requires "x86-configuration.k"

module PSLLD-XMM-IMM8
  imports X86-CONFIGURATION

  rule <k>
    execinstr (pslld Imm8:MInt, R2:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R2) |-> concatenateMInt( extractMInt( getParentValue(R2, RSMap), 0, 128), (#ifMInt ugtMInt( concatenateMInt( mi(56, 0), Imm8), mi(64, 31)) #then mi(128, 0) #else concatenateMInt( shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 128, 160), uvalueMInt(concatenateMInt( mi(24, 0), Imm8))), concatenateMInt( shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 160, 192), uvalueMInt(concatenateMInt( mi(24, 0), Imm8))), concatenateMInt( shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 192, 224), uvalueMInt(concatenateMInt( mi(24, 0), Imm8))), shiftLeftMInt( extractMInt( getParentValue(R2, RSMap), 224, 256), uvalueMInt(concatenateMInt( mi(24, 0), Imm8)))))) #fi))
)

    </regstate>
      requires bitwidthMInt(Imm8) ==Int 8
    
endmodule

module PSLLD-XMM-IMM8-SEMANTICS
  imports PSLLD-XMM-IMM8
endmodule
