// Autogenerated using stratification.
requires "x86-configuration.k"

module VPSRLQ-XMM-XMM-IMM8
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vpsrlq Imm8:MInt, R2:Xmm, R3:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> (#ifMInt ugtMInt( concatenateMInt( mi(56, 0), Imm8), mi(64, 63)) #then concatenateMInt( mi(128, 0), mi(128, 0)) #else concatenateMInt( mi(128, 0), concatenateMInt( lshrMInt( extractMInt( getParentValue(R2, RSMap), 128, 192), uvalueMInt(concatenateMInt( mi(56, 0), Imm8))), lshrMInt( extractMInt( getParentValue(R2, RSMap), 192, 256), uvalueMInt(concatenateMInt( mi(56, 0), Imm8))))) #fi)
)

    </regstate>
      requires bitwidthMInt(Imm8) ==Int 8
    
endmodule

module VPSRLQ-XMM-XMM-IMM8-SEMANTICS
  imports VPSRLQ-XMM-XMM-IMM8
endmodule
