// Autogenerated using stratification.
requires "x86-configuration.k"

module VPINSRW-XMM-XMM-R32-IMM8
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vpinsrw Imm8:MInt, R2:R32, R3:Xmm, R4:Xmm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R4) |-> concatenateMInt( mi(128, 0), orMInt( andMInt( extractMInt( getParentValue(R3, RSMap), 128, 256), negMInt( shiftLeftMInt( mi(128, 65535), uvalueMInt(shiftLeftMInt( concatenateMInt( mi(125, 0), extractMInt( Imm8, 5, 8)), uvalueMInt(mi(128, 4))))))), andMInt( shiftLeftMInt( concatenateMInt( mi(96, 0), extractMInt( getParentValue(R2, RSMap), 32, 64)), uvalueMInt(shiftLeftMInt( concatenateMInt( mi(125, 0), extractMInt( Imm8, 5, 8)), uvalueMInt(mi(128, 4))))), shiftLeftMInt( mi(128, 65535), uvalueMInt(shiftLeftMInt( concatenateMInt( mi(125, 0), extractMInt( Imm8, 5, 8)), uvalueMInt(mi(128, 4))))))))
)

    </regstate>
      requires bitwidthMInt(Imm8) ==Int 8
    
endmodule

module VPINSRW-XMM-XMM-R32-IMM8-SEMANTICS
  imports VPINSRW-XMM-XMM-R32-IMM8
endmodule
