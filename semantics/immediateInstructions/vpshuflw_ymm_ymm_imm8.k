// Autogenerated using stratification.
requires "x86-configuration.k"

module VPSHUFLW-YMM-YMM-IMM8
  imports X86-CONFIGURATION

  rule <k>
    execinstr (vpshuflw Imm8:MInt, R2:Ymm, R3:Ymm,  .Operands) => .
  ...</k>
    <regstate>
RSMap:Map => updateMap(RSMap,
convToRegKeys(R3) |-> concatenateMInt( extractMInt( getParentValue(R2, RSMap), 0, 64), concatenateMInt( extractMInt( lshrMInt( getParentValue(R2, RSMap), uvalueMInt(shiftLeftMInt( concatenateMInt( mi(254, 0), extractMInt( Imm8, 0, 2)), uvalueMInt(mi(256, 4))))), 112, 128), concatenateMInt( extractMInt( lshrMInt( getParentValue(R2, RSMap), uvalueMInt(shiftLeftMInt( concatenateMInt( mi(254, 0), extractMInt( Imm8, 2, 4)), uvalueMInt(mi(256, 4))))), 112, 128), concatenateMInt( extractMInt( lshrMInt( getParentValue(R2, RSMap), uvalueMInt(shiftLeftMInt( concatenateMInt( mi(254, 0), extractMInt( Imm8, 4, 6)), uvalueMInt(mi(256, 4))))), 112, 128), concatenateMInt( extractMInt( lshrMInt( getParentValue(R2, RSMap), uvalueMInt(shiftLeftMInt( concatenateMInt( mi(254, 0), extractMInt( Imm8, 6, 8)), uvalueMInt(mi(256, 4))))), 112, 128), concatenateMInt( extractMInt( getParentValue(R2, RSMap), 128, 192), concatenateMInt( extractMInt( lshrMInt( getParentValue(R2, RSMap), uvalueMInt(shiftLeftMInt( concatenateMInt( mi(254, 0), extractMInt( Imm8, 0, 2)), uvalueMInt(mi(256, 4))))), 240, 256), concatenateMInt( extractMInt( lshrMInt( getParentValue(R2, RSMap), uvalueMInt(shiftLeftMInt( concatenateMInt( mi(254, 0), extractMInt( Imm8, 2, 4)), uvalueMInt(mi(256, 4))))), 240, 256), concatenateMInt( extractMInt( lshrMInt( getParentValue(R2, RSMap), uvalueMInt(shiftLeftMInt( concatenateMInt( mi(254, 0), extractMInt( Imm8, 4, 6)), uvalueMInt(mi(256, 4))))), 240, 256), extractMInt( lshrMInt( getParentValue(R2, RSMap), uvalueMInt(shiftLeftMInt( concatenateMInt( mi(254, 0), extractMInt( Imm8, 6, 8)), uvalueMInt(mi(256, 4))))), 240, 256))))))))))
)

    </regstate>
      requires bitwidthMInt(Imm8) ==Int 8
    
endmodule

module VPSHUFLW-YMM-YMM-IMM8-SEMANTICS
  imports VPSHUFLW-YMM-YMM-IMM8
endmodule
