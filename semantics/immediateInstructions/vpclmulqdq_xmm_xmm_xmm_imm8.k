// Autogenerated using stratification.
requires "x86-configuration.k"

module VPCLMULQDQ-XMM-XMM-XMM-IMM8
  imports X86-CONFIGURATION

    /*
    IF (Imm8[0] = 0 )
        THEN
            TEMP1竊心RC1 [63:0];
        ELSE
            TEMP1竊心RC1 [127:64];
    FI
    IF (Imm8[4] = 0 )
        THEN
            TEMP2竊心RC2 [63:0];
        ELSE
            TEMP2竊心RC2 [127:64];
  */   
  rule <k>
    execinstr (vpclmulqdq Imm8:MInt, R2:Xmm, R3:Xmm, R4:Xmm, .Operands) => 
      execinstr(vpclmulqdq 
          selectSlice(getRegisterValue(R3, RSMap), Imm8, 7, 64, 0),
          selectSlice(getRegisterValue(R2, RSMap), Imm8, 3, 64, 0), R4
          , .Operands)
  ...</k>
    <regstate> RSMap </regstate>
      requires bitwidthMInt(Imm8) ==Int 8

  rule <k>
    execinstr (vpclmulqdq TEMP1:MInt, TEMP2:MInt, R4:Xmm,   .Operands) => 
      setParentValue(
          concatenateMInt(
            mi(128, 0), 
            orMInt(
              computePCLMULQDQ1(TEMP1, TEMP2, mi(128, 0), 0, 63), 
              computePCLMULQDQ2(TEMP1, TEMP2, mi(128, 0), 64, 126) 
            )), R4)
  ...</k>
endmodule

module VPCLMULQDQ-XMM-XMM-XMM-IMM8-SEMANTICS
  imports VPCLMULQDQ-XMM-XMM-XMM-IMM8
endmodule
